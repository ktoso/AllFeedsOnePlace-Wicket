usePlugin 'war'
usePlugin 'jetty'
//usePlugin org.meijiframework.gradle.plugins.HibernateToolsPlugin

repositories {
  mavenCentral()
  mavenRepo urls: "http://repository.jboss.com/maven2"
  mavenRepo urls: "http://bzb-framework.googlecode.com/svn/maven-repository"
  mavenRepo urls: "http://wicketstuff.org/maven/repository"
}

dependencies {
  // wicket
  compile group: 'org.apache.wicket', name: 'wicket', version: '1.5-SNAPSHOT'

  // hibernate
  compile group: 'org.hibernate', name: 'ejb3-persistence', version: '1.0.2.GA'
  compile group: 'org.hibernate', name: 'hibernate-annotations', version: '3.4.0.GA'
  compile group: 'org.hibernate', name: 'hibernate-commons-annotations', version: '3.3.0.ga'
  compile group: 'org.hibernate', name: 'hibernate-search', version: '3.1.0.GA'
  compile group: 'javax.validation', name: 'validation-api', version: '1.0.CR5'

  // hades
  compile group: 'org.synyx.hades', name: 'org.synyx.hades', version: '2.0.0.RELEASE'

  // logging
  compile group: 'log4j', name: 'log4j', version: '1.2.14'
  compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.5.8'
  compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'

  // jetty
  compile group: 'org.mortbay.jetty', name: 'jetty', version: '6.1.25', scope: 'provided'
  compile group: 'org.mortbay.jetty', name: 'jetty-util', version: '6.1.25', scope: 'provided'
  compile group: 'org.mortbay.jetty', name: 'jetty-management', version: '6.1.25', scope: 'provided'

  // other tools
  compile group: 'commons-io', name: 'commons-io', version: '1.4'
  compile group: 'com.google.guava', name: 'guava', version: 'r07'

  // test stuff
  testCompile group: 'junit', name: 'junit', version: '4.4'
  testCompile group: 'org.hibernate', name: 'hibernate-validator', version: '4.0.0.CR1'
}

//schemaExport.dialects = 'org.hibernate.dialect.Oracle10gDialect, org.hibernate.dialect.MySQL5Dialect, org.hibernate.dialect.PostgreSQLDialect, org.hibernate.dialect.HSQLDialect'

gradle.taskGraph.whenReady {graph ->
  if (graph.hasTask(runTest) || graph.hasTask(runWarTest)) {
    [jettyRun, jettyRunWar]*.daemon = true
  }
}
stopKey = 'foo'
stopPort = 9451
httpPort = 8163

task run(dependsOn: jettyRun) << {
  callServlet()
}

task runTest(dependsOn: jettyRun) << {
  callServlet()
}

task runWarTest(dependsOn: jettyRunWar) << {
  callServlet()
}

private void callServlet() {
  URL url = new URL("http://localhost:$httpPort/quickstart")
  println url.text
  jettyStop.execute()
}
